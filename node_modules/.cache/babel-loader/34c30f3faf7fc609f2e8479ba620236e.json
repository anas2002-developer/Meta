{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anas4\\\\OneDrive\\\\Desktop\\\\Metacrafters\\\\Module2_Chapter4\\\\src\\\\BankApp.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport styles from './Bank.module.css';\nimport simple_token_abi from './Contracts/bank_app_abi.json';\nimport Interactions from './Interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BankApp = () => {\n  _s();\n\n  // deploy simple token contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [transferHash, setTransferHash] = useState(null);\n  const [checkAcc, setCheckAcc] = useState('false');\n  const [accStatus, setAccStatus] = useState('');\n  const [accbalance, setAccBalance] = useState('');\n  const [loanAmount, setLoanAmount] = useState('');\n  const [loanDuration, setLoanDuration] = useState('');\n  const [interestPercentage, setInterestPercentage] = useState('');\n  const [monthlyPayment, setMonthlyPayment] = useState('');\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  }; // update account, will cause component re-render\n\n\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  }; // listen for account changes\n\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\n    setContract(tempContract);\n  };\n\n  const createAccount = async () => {\n    let txt = await contract.createAcc();\n    console.log(txt);\n    setAccStatus('Your Account is created');\n  };\n\n  const checkAccountExists = async () => {\n    let txt = await contract.accountExists();\n\n    if (txt == true) {\n      setCheckAcc('true');\n    }\n  };\n\n  const AccountBalance = async () => {\n    let txt = await contract.accountBalance();\n    let balanceNumber = txt.toNumber(); //let tokenDecimals = await contract.decimals();\n\n    console.log(balanceNumber);\n    setAccBalance('' + balanceNumber);\n  };\n\n  const DepositBalance = async e => {\n    e.preventDefault();\n    let depositAmount = e.target.depositAmount.value;\n    let txt = await contract.deposit({\n      value: depositAmount\n    });\n  };\n\n  const WithdrawBalance = async e => {\n    e.preventDefault();\n    let withdrawAmount = e.target.withdrawAmount.value;\n    let txt = await contract.withdraw(withdrawAmount);\n    console.log(txt);\n  };\n\n  const calculateMonthlyPayment = () => {\n    const principal = parseFloat(loanAmount);\n    const interestRate = parseFloat(interestPercentage) / 100;\n    const duration = parseFloat(loanDuration);\n    const monthlyInterestRate = interestRate / 12;\n    const numPayments = duration * 12;\n    const numerator = monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numPayments);\n    const denominator = Math.pow(1 + monthlyInterestRate, numPayments) - 1;\n    const monthlyPayment = (principal * (numerator / denominator)).toFixed(2);\n    setMonthlyPayment(monthlyPayment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bank Dapp- Create Account, Check Account, Check Balance, Deposit, and Loan Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button6,\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.walletCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: AccountBalance,\n          children: \"Account Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Balance in the Bank: \", accbalance, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.interactionsCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click here to Create your account. Make sure you are connected to Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createAccount,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click here to check if your account Exists or not\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkAccountExists,\n          children: \"Check Account Exists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Account Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\" \", checkAcc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: DepositBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Deposit Money \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Deposit Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"depositAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: WithdrawBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Withdraw Money \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Withdraw Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"withdrawAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loan Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loan Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"loanAmount\",\n            value: loanAmount,\n            onChange: e => setLoanAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Duration (in years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"loanDuration\",\n            value: loanDuration,\n            onChange: e => setLoanDuration(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Interest Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"interestPercentage\",\n            value: interestPercentage,\n            onChange: e => setInterestPercentage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: calculateMonthlyPayment,\n            className: styles.button6,\n            children: \"Calculate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: monthlyPayment && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Monthly Payment: \", monthlyPayment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BankApp, \"o8jqqoM976d7fJ+GopVzB6q/XB0=\");\n\n_c = BankApp;\nexport default BankApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankApp\");","map":{"version":3,"sources":["C:/Users/anas4/OneDrive/Desktop/Metacrafters/Module2_Chapter4/src/BankApp.js"],"names":["React","useState","useEffect","ethers","styles","simple_token_abi","Interactions","BankApp","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","provider","setProvider","signer","setSigner","contract","setContract","transferHash","setTransferHash","checkAcc","setCheckAcc","accStatus","setAccStatus","accbalance","setAccBalance","loanAmount","setLoanAmount","loanDuration","setLoanDuration","interestPercentage","setInterestPercentage","monthlyPayment","setMonthlyPayment","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","createAccount","txt","createAcc","checkAccountExists","accountExists","AccountBalance","accountBalance","balanceNumber","toNumber","DepositBalance","e","preventDefault","depositAmount","target","value","deposit","WithdrawBalance","withdrawAmount","withdraw","calculateMonthlyPayment","principal","parseFloat","interestRate","duration","monthlyInterestRate","numPayments","numerator","Math","pow","denominator","toFixed","button6","walletCard","interactionsCard"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport styles from './Bank.module.css';\r\nimport simple_token_abi from './Contracts/bank_app_abi.json';\r\nimport Interactions from './Interactions';\r\n\r\nconst BankApp = () => {\r\n  // deploy simple token contract and paste deployed contract address here. This value is local ganache chain\r\n  let contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\r\n\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [defaultAccount, setDefaultAccount] = useState(null);\r\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const [transferHash, setTransferHash] = useState(null);\r\n  const [checkAcc, setCheckAcc] = useState('false');\r\n  const [accStatus, setAccStatus] = useState('');\r\n  const [accbalance, setAccBalance] = useState('');\r\n\r\n  const [loanAmount, setLoanAmount] = useState('');\r\n  const [loanDuration, setLoanDuration] = useState('');\r\n  const [interestPercentage, setInterestPercentage] = useState('');\r\n  const [monthlyPayment, setMonthlyPayment] = useState('');\r\n\r\n  const connectWalletHandler = () => {\r\n    if (window.ethereum && window.ethereum.isMetaMask) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then((result) => {\r\n          accountChangedHandler(result[0]);\r\n          setConnButtonText('Wallet Connected');\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message);\r\n        });\r\n    } else {\r\n      console.log('Need to install MetaMask');\r\n      setErrorMessage('Please install MetaMask browser extension to interact');\r\n    }\r\n  };\r\n\r\n  // update account, will cause component re-render\r\n  const accountChangedHandler = (newAccount) => {\r\n    setDefaultAccount(newAccount);\r\n    updateEthers();\r\n  };\r\n\r\n  const chainChangedHandler = () => {\r\n    // reload the page to avoid any errors with chain change mid use of application\r\n    window.location.reload();\r\n  };\r\n\r\n  // listen for account changes\r\n  window.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n  window.ethereum.on('chainChanged', chainChangedHandler);\r\n\r\n  const updateEthers = () => {\r\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n    setProvider(tempProvider);\r\n\r\n    let tempSigner = tempProvider.getSigner();\r\n    setSigner(tempSigner);\r\n\r\n    let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\r\n    setContract(tempContract);\r\n  };\r\n\r\n  const createAccount = async () => {\r\n    let txt = await contract.createAcc();\r\n    console.log(txt);\r\n    setAccStatus('Your Account is created');\r\n  };\r\n\r\n  const checkAccountExists = async () => {\r\n    let txt = await contract.accountExists();\r\n    if (txt == true) {\r\n      setCheckAcc('true');\r\n    }\r\n  };\r\n\r\n  const AccountBalance = async () => {\r\n    let txt = await contract.accountBalance();\r\n    let balanceNumber = txt.toNumber();\r\n    //let tokenDecimals = await contract.decimals();\r\n    console.log(balanceNumber);\r\n    setAccBalance('' + balanceNumber);\r\n  };\r\n\r\n  const DepositBalance = async (e) => {\r\n    e.preventDefault();\r\n    let depositAmount = e.target.depositAmount.value;\r\n    let txt = await contract.deposit({\r\n      value: depositAmount,\r\n    });\r\n  };\r\n\r\n  const WithdrawBalance = async (e) => {\r\n    e.preventDefault();\r\n    let withdrawAmount = e.target.withdrawAmount.value;\r\n    let txt = await contract.withdraw(withdrawAmount);\r\n    console.log(txt);\r\n  };\r\n\r\n  const calculateMonthlyPayment = () => {\r\n    const principal = parseFloat(loanAmount);\r\n    const interestRate = parseFloat(interestPercentage) / 100;\r\n    const duration = parseFloat(loanDuration);\r\n\r\n    const monthlyInterestRate = interestRate / 12;\r\n    const numPayments = duration * 12;\r\n\r\n    const numerator = monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numPayments);\r\n    const denominator = Math.pow(1 + monthlyInterestRate, numPayments) - 1;\r\n\r\n    const monthlyPayment = (principal * (numerator / denominator)).toFixed(2);\r\n    setMonthlyPayment(monthlyPayment);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bank Dapp- Create Account, Check Account, Check Balance, Deposit, and Loan Calculator</h2>\r\n      <button className={styles.button6} onClick={connectWalletHandler}>\r\n        {connButtonText}\r\n      </button>\r\n\r\n      <div className={styles.walletCard}>\r\n        <div>\r\n          <h3>Address: {defaultAccount}</h3>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={AccountBalance}>Account Balance</button>{' '}\r\n          <h3>Balance in the Bank: {accbalance} </h3>\r\n        </div>\r\n\r\n        {errorMessage}\r\n      </div>\r\n      <div className={styles.interactionsCard}>\r\n        <div>\r\n          <h4>Click here to Create your account. Make sure you are connected to Wallet</h4>\r\n          <button onClick={createAccount}>Create Account</button>\r\n          <h4>Click here to check if your account Exists or not</h4>\r\n          <button onClick={checkAccountExists}>Check Account Exists</button>\r\n          <h4>Your Account Status</h4> <h5> {checkAcc}</h5>\r\n        </div>\r\n        <form onSubmit={DepositBalance}>\r\n          <h3> Deposit Money </h3>\r\n          <p> Deposit Amount </p>\r\n          <input type=\"number\" id=\"depositAmount\" min=\"0\" step=\"1\" />\r\n          <button type=\"submit\" className={styles.button6}>\r\n            Deposit\r\n          </button>\r\n        </form>\r\n        <form onSubmit={WithdrawBalance}>\r\n          <h3> Withdraw Money </h3>\r\n          <p>Withdraw Amount </p>\r\n          <input type=\"number\" id=\"withdrawAmount\" min=\"0\" step=\"1\" />\r\n          <button type=\"submit\" className={styles.button6}>\r\n            Withdraw\r\n          </button>\r\n        </form>\r\n        <div>\r\n          <h3>Loan Calculator</h3>\r\n          <form>\r\n            <p>Loan Amount</p>\r\n            <input type=\"number\" id=\"loanAmount\" value={loanAmount} onChange={(e) => setLoanAmount(e.target.value)} />\r\n            <p>Duration (in years)</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"loanDuration\"\r\n              value={loanDuration}\r\n              onChange={(e) => setLoanDuration(e.target.value)}\r\n            />\r\n            <p>Interest Percentage</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"interestPercentage\"\r\n              value={interestPercentage}\r\n              onChange={(e) => setInterestPercentage(e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={calculateMonthlyPayment} className={styles.button6}>\r\n              Calculate\r\n            </button>\r\n          </form>\r\n          <div>\r\n            {monthlyPayment && <h4>Monthly Payment: {monthlyPayment}</h4>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BankApp;\r\n"]},"metadata":{},"sourceType":"module"}