{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anas4\\\\OneDrive\\\\Desktop\\\\Metacrafters\\\\Module2_Chapter4\\\\src\\\\BankApp.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport styles from './Bank.module.css';\nimport simple_token_abi from './Contracts/bank_app_abi.json';\nimport Interactions from './Interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BankApp = () => {\n  _s();\n\n  // deploy simple token contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [transferHash, setTransferHash] = useState(null);\n  const [checkAcc, setCheckAcc] = useState('false');\n  const [accStatus, setAccStatus] = useState('');\n  const [accbalance, setAccBalance] = useState('');\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  }; // update account, will cause component re-render\n\n\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  }; // listen for account changes\n\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\n    setContract(tempContract);\n  };\n\n  const createAccount = async () => {\n    let txt = await contract.createAcc();\n    console.log(txt);\n    setAccStatus('Your Account is created');\n  };\n\n  const checkAccountExists = async () => {\n    let txt = await contract.accountExists();\n\n    if (txt == true) {\n      setCheckAcc('true');\n    }\n  };\n\n  const AccountBalance = async () => {\n    let txt = await contract.accountBalance();\n    let balanceNumber = txt.toNumber(); //let tokenDecimals = await contract.decimals();\n\n    console.log(balanceNumber);\n    setAccBalance('' + balanceNumber);\n  };\n\n  const DepositBalance = async e => {\n    e.preventDefault();\n    let depositAmount = e.target.depositAmount.value;\n    let txt = await contract.deposit({\n      value: depositAmount\n    });\n  };\n\n  const WithdrawBalance = async e => {\n    e.preventDefault();\n    let withdrawAmount = e.target.withdrawAmount.value;\n    let txt = await contract.withdraw(withdrawAmount);\n    console.log(txt);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bank Dapp- Create Account, Check Account, Check Balance, and Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button6,\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.walletCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: AccountBalance,\n          children: \"Account Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Balance in the Bank: \", accbalance, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.interactionsCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click here to Create your account. Make sure you are connected to Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createAccount,\n          children: \"CreateAccount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click here to check if your account Exists or not\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkAccountExists,\n          children: \"CheckAccountExists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Account Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\" \", checkAcc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: DepositBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Deposit Money \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Deposit Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"depositAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: WithdrawBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Withdraw Money \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Withdraw Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"withdrawAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BankApp, \"FQd7QG1bpKuKBEcNxey787Y8mG0=\");\n\n_c = BankApp;\nexport default BankApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankApp\");","map":{"version":3,"sources":["C:/Users/anas4/OneDrive/Desktop/Metacrafters/Module2_Chapter4/src/BankApp.js"],"names":["React","useState","useEffect","ethers","styles","simple_token_abi","Interactions","BankApp","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","provider","setProvider","signer","setSigner","contract","setContract","transferHash","setTransferHash","checkAcc","setCheckAcc","accStatus","setAccStatus","accbalance","setAccBalance","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","createAccount","txt","createAcc","checkAccountExists","accountExists","AccountBalance","accountBalance","balanceNumber","toNumber","DepositBalance","e","preventDefault","depositAmount","target","value","deposit","WithdrawBalance","withdrawAmount","withdraw","button6","walletCard","interactionsCard"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport styles from './Bank.module.css';\r\nimport simple_token_abi from './Contracts/bank_app_abi.json';\r\nimport Interactions from './Interactions';\r\n\r\nconst BankApp = () => {\r\n  // deploy simple token contract and paste deployed contract address here. This value is local ganache chain\r\n  let contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\r\n\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [defaultAccount, setDefaultAccount] = useState(null);\r\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const [transferHash, setTransferHash] = useState(null);\r\n  const [checkAcc, setCheckAcc] = useState('false');\r\n  const [accStatus, setAccStatus] = useState('');\r\n  const [accbalance, setAccBalance] = useState('');\r\n\r\n  const connectWalletHandler = () => {\r\n    if (window.ethereum && window.ethereum.isMetaMask) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then((result) => {\r\n          accountChangedHandler(result[0]);\r\n          setConnButtonText('Wallet Connected');\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message);\r\n        });\r\n    } else {\r\n      console.log('Need to install MetaMask');\r\n      setErrorMessage('Please install MetaMask browser extension to interact');\r\n    }\r\n  };\r\n\r\n  // update account, will cause component re-render\r\n  const accountChangedHandler = (newAccount) => {\r\n    setDefaultAccount(newAccount);\r\n    updateEthers();\r\n  };\r\n\r\n  const chainChangedHandler = () => {\r\n    // reload the page to avoid any errors with chain change mid use of application\r\n    window.location.reload();\r\n  };\r\n\r\n  // listen for account changes\r\n  window.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n  window.ethereum.on('chainChanged', chainChangedHandler);\r\n\r\n  const updateEthers = () => {\r\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n    setProvider(tempProvider);\r\n\r\n    let tempSigner = tempProvider.getSigner();\r\n    setSigner(tempSigner);\r\n\r\n    let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\r\n    setContract(tempContract);\r\n  };\r\n\r\n  const createAccount = async () => {\r\n    let txt = await contract.createAcc();\r\n    console.log(txt);\r\n    setAccStatus('Your Account is created');\r\n  };\r\n\r\n  const checkAccountExists = async () => {\r\n    let txt = await contract.accountExists();\r\n    if (txt == true) {\r\n      setCheckAcc('true');\r\n    }\r\n  };\r\n\r\n  const AccountBalance = async () => {\r\n    let txt = await contract.accountBalance();\r\n    let balanceNumber = txt.toNumber();\r\n    //let tokenDecimals = await contract.decimals();\r\n    console.log(balanceNumber);\r\n    setAccBalance('' + balanceNumber);\r\n  };\r\n\r\n  const DepositBalance = async (e) => {\r\n    e.preventDefault();\r\n    let depositAmount = e.target.depositAmount.value;\r\n    let txt = await contract.deposit({\r\n      value: depositAmount,\r\n    });\r\n  };\r\n\r\n  const WithdrawBalance = async (e) => {\r\n    e.preventDefault();\r\n    let withdrawAmount = e.target.withdrawAmount.value;\r\n    let txt = await contract.withdraw(withdrawAmount);\r\n    console.log(txt);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bank Dapp- Create Account, Check Account, Check Balance, and Deposit</h2>\r\n      <button className={styles.button6} onClick={connectWalletHandler}>\r\n        {connButtonText}\r\n      </button>\r\n\r\n      <div className={styles.walletCard}>\r\n        <div>\r\n          <h3>Address: {defaultAccount}</h3>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={AccountBalance}>Account Balance</button>{' '}\r\n          <h3>Balance in the Bank: {accbalance} </h3>\r\n        </div>\r\n\r\n        {errorMessage}\r\n      </div>\r\n      <div className={styles.interactionsCard}>\r\n        <div>\r\n          <h4>Click here to Create your account. Make sure you are connected to Wallet</h4>\r\n          <button onClick={createAccount}>CreateAccount</button>\r\n          <h4>Click here to check if your account Exists or not</h4>\r\n          <button onClick={checkAccountExists}>CheckAccountExists</button>\r\n          <h4>Your Account Status</h4> <h5> {checkAcc}</h5>\r\n        </div>\r\n        <form onSubmit={DepositBalance}>\r\n          <h3> Deposit Money </h3>\r\n          <p> Deposit Amount </p>\r\n          <input type=\"number\" id=\"depositAmount\" min=\"0\" step=\"1\" />\r\n          <button type=\"submit\" className={styles.button6}>\r\n            Deposit\r\n          </button>\r\n        </form>\r\n        <form onSubmit={WithdrawBalance}>\r\n          <h3> Withdraw Money </h3>\r\n          <p>Withdraw Amount </p>\r\n          <input type=\"number\" id=\"withdrawAmount\" min=\"0\" step=\"1\" />\r\n          <button type=\"submit\" className={styles.button6}>\r\n            Withdraw\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BankApp;\r\n"]},"metadata":{},"sourceType":"module"}