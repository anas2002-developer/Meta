[{"C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\index.js":"1","C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\App.js":"2","C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\reportWebVitals.js":"3","C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\BankApp.js":"4","C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\Interactions.js":"5"},{"size":517,"mtime":1688801546291,"results":"6","hashOfConfig":"7"},{"size":208,"mtime":1688801546291,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1688801546291,"results":"9","hashOfConfig":"7"},{"size":7732,"mtime":1688806590151,"results":"10","hashOfConfig":"7"},{"size":1039,"mtime":1688801546291,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"kxgcg6",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\index.js",[],["25","26"],"C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\App.js",["27"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport BankApp from './BankApp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BankApp/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\reportWebVitals.js",[],"C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\BankApp.js",["28","29","30","31","32","33","34","35","36"],"import { React, useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport styles from './Bank.module.css';\r\nimport simple_token_abi from './Contracts/bank_app_abi.json';\r\nimport Interactions from './Interactions';\r\n\r\nconst BankApp = () => {\r\n  // deploy simple token contract and paste deployed contract address here. This value is local ganache chain\r\n  let contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\r\n\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [defaultAccount, setDefaultAccount] = useState(null);\r\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const [transferHash, setTransferHash] = useState(null);\r\n  const [checkAcc, setCheckAcc] = useState('false');\r\n  const [accStatus, setAccStatus] = useState('');\r\n  const [accbalance, setAccBalance] = useState('');\r\n\r\n  const [loanAmount, setLoanAmount] = useState('');\r\n  const [loanDuration, setLoanDuration] = useState('');\r\n  const [interestPercentage, setInterestPercentage] = useState('');\r\n  const [monthlyPayment, setMonthlyPayment] = useState('');\r\n\r\n  const [rupeesAmount, setRupeesAmount] = useState('');\r\n  const [dollarAmount, setDollarAmount] = useState('');\r\n\r\n  const connectWalletHandler = () => {\r\n    if (window.ethereum && window.ethereum.isMetaMask) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then((result) => {\r\n          accountChangedHandler(result[0]);\r\n          setConnButtonText('Wallet Connected');\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message);\r\n        });\r\n    } else {\r\n      console.log('Need to install MetaMask');\r\n      setErrorMessage('Please install MetaMask browser extension to interact');\r\n    }\r\n  };\r\n\r\n  // update account, will cause component re-render\r\n  const accountChangedHandler = (newAccount) => {\r\n    setDefaultAccount(newAccount);\r\n    updateEthers();\r\n  };\r\n\r\n  const chainChangedHandler = () => {\r\n    // reload the page to avoid any errors with chain change mid use of application\r\n    window.location.reload();\r\n  };\r\n\r\n  // listen for account changes\r\n  window.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n  window.ethereum.on('chainChanged', chainChangedHandler);\r\n\r\n  const updateEthers = () => {\r\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n    setProvider(tempProvider);\r\n\r\n    let tempSigner = tempProvider.getSigner();\r\n    setSigner(tempSigner);\r\n\r\n    let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\r\n    setContract(tempContract);\r\n  };\r\n\r\n  const createAccount = async () => {\r\n    let txt = await contract.createAcc();\r\n    console.log(txt);\r\n    setAccStatus('Your Account is created');\r\n  };\r\n\r\n  const checkAccountExists = async () => {\r\n    let txt = await contract.accountExists();\r\n    if (txt == true) {\r\n      setCheckAcc('true');\r\n    }\r\n  };\r\n\r\n  const AccountBalance = async () => {\r\n    let txt = await contract.accountBalance();\r\n    let balanceNumber = txt.toNumber();\r\n    console.log(balanceNumber);\r\n    setAccBalance('' + balanceNumber);\r\n  };\r\n\r\n  const DepositBalance = async (e) => {\r\n    e.preventDefault();\r\n    let depositAmount = e.target.depositAmount.value;\r\n    let txt = await contract.deposit({\r\n      value: depositAmount,\r\n    });\r\n  };\r\n\r\n  const WithdrawBalance = async (e) => {\r\n    e.preventDefault();\r\n    let withdrawAmount = e.target.withdrawAmount.value;\r\n    let txt = await contract.withdraw(withdrawAmount);\r\n    console.log(txt);\r\n  };\r\n\r\n  const calculateMonthlyPayment = () => {\r\n    const principal = parseFloat(loanAmount);\r\n    const interestRate = parseFloat(interestPercentage) / 100;\r\n    const duration = parseFloat(loanDuration);\r\n\r\n    const monthlyInterestRate = interestRate / 12;\r\n    const numPayments = duration * 12;\r\n\r\n    const numerator = monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numPayments);\r\n    const denominator = Math.pow(1 + monthlyInterestRate, numPayments) - 1;\r\n\r\n    const monthlyPayment = (principal * (numerator / denominator)).toFixed(2);\r\n    setMonthlyPayment(monthlyPayment);\r\n  };\r\n\r\n  const convertToDollar = () => {\r\n    const rupees = parseFloat(rupeesAmount);\r\n    const dollar = rupees / 75; // Assuming 1 dollar is equal to 75 rupees\r\n    setDollarAmount(dollar.toFixed(2));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bank Dapp- Create Account, Check Account, Check Balance, Deposit, and Loan Calculator</h2>\r\n      <button className={styles.button6} onClick={connectWalletHandler}>\r\n        {connButtonText}\r\n      </button>\r\n\r\n      <div className={styles.walletCard}>\r\n        <div>\r\n          <h3>Address: {defaultAccount}</h3>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={AccountBalance}>Account Balance</button>{' '}\r\n          <h3>Balance in the Bank: {accbalance} </h3>\r\n        </div>\r\n\r\n        {errorMessage}\r\n      </div>\r\n      <div className={styles.interactionsCard}>\r\n        <div>\r\n          <h4>Click here to Create your account. Make sure you are connected to Wallet</h4>\r\n          <button onClick={createAccount}>Create Account</button>\r\n          <h4>Click here to check if your account Exists or not</h4>\r\n          <button onClick={checkAccountExists}>Check Account Exists</button>\r\n          <h4>Your Account Status</h4> <h5> {checkAcc}</h5>\r\n        </div>\r\n        <form onSubmit={DepositBalance}>\r\n          <h3> Deposit Money </h3>\r\n          <p> Deposit Amount </p>\r\n          <input type=\"number\" id=\"depositAmount\" min=\"0\" step=\"1\" />\r\n          <button type=\"submit\" className={styles.button6}>\r\n            Deposit\r\n          </button>\r\n        </form>\r\n        <form onSubmit={WithdrawBalance}>\r\n          <h3> Withdraw Money </h3>\r\n          <p>Withdraw Amount </p>\r\n          <input type=\"number\" id=\"withdrawAmount\" min=\"0\" step=\"1\" />\r\n          <button type=\"submit\" className={styles.button6}>\r\n            Withdraw\r\n          </button>\r\n        </form>\r\n        <div>\r\n          <h3>Loan Calculator</h3>\r\n          <form>\r\n            <p>Loan Amount</p>\r\n            <input type=\"number\" id=\"loanAmount\" value={loanAmount} onChange={(e) => setLoanAmount(e.target.value)} />\r\n            <p>Duration (in years)</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"loanDuration\"\r\n              value={loanDuration}\r\n              onChange={(e) => setLoanDuration(e.target.value)}\r\n            />\r\n            <p>Interest Percentage</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"interestPercentage\"\r\n              value={interestPercentage}\r\n              onChange={(e) => setInterestPercentage(e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={calculateMonthlyPayment} className={styles.button6}>\r\n              Calculate\r\n            </button>\r\n          </form>\r\n          <div>\r\n            {monthlyPayment && <h4>Monthly Payment: {monthlyPayment}</h4>}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>Convert Rupees to Dollar</h3>\r\n          <form>\r\n            <p>Rupees Amount</p>\r\n            <input type=\"number\" id=\"rupeesAmount\" value={rupeesAmount} onChange={(e) => setRupeesAmount(e.target.value)} />\r\n            <button type=\"button\" onClick={convertToDollar} className={styles.button6}>\r\n              Convert\r\n            </button>\r\n          </form>\r\n          <div>\r\n            {dollarAmount && <h4>Dollar Amount: {dollarAmount}</h4>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BankApp;\r\n","C:\\Users\\anas4\\OneDrive\\Desktop\\Metacrafters\\Module2_Chapter4\\src\\Interactions.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"41","severity":1,"message":"46","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":20},{"ruleId":"41","severity":1,"message":"47","line":15,"column":10,"nodeType":"43","messageId":"44","endLine":15,"endColumn":18},{"ruleId":"41","severity":1,"message":"48","line":16,"column":10,"nodeType":"43","messageId":"44","endLine":16,"endColumn":16},{"ruleId":"41","severity":1,"message":"49","line":19,"column":10,"nodeType":"43","messageId":"44","endLine":19,"endColumn":22},{"ruleId":"41","severity":1,"message":"50","line":19,"column":24,"nodeType":"43","messageId":"44","endLine":19,"endColumn":39},{"ruleId":"41","severity":1,"message":"51","line":21,"column":10,"nodeType":"43","messageId":"44","endLine":21,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":84,"column":13,"nodeType":"54","messageId":"55","endLine":84,"endColumn":15},{"ruleId":"41","severity":1,"message":"56","line":99,"column":9,"nodeType":"43","messageId":"44","endLine":99,"endColumn":12},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Interactions' is defined but never used.","'provider' is assigned a value but never used.","'signer' is assigned a value but never used.","'transferHash' is assigned a value but never used.","'setTransferHash' is assigned a value but never used.","'accStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'txt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]